{"version":3,"file":"component---src-pages-index-jsx-9577742282db3bff8bdd.js","mappings":"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","sources":["webpack://inbio-gatsby/./src/components/modal-experience/index.jsx","webpack://inbio-gatsby/./src/components/education-card/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/experience/layout-05/index.jsx","webpack://inbio-gatsby/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { X, ThumbsUp, ChevronRight } from \"react-feather\";\nimport Image from \"@ui/image\";\nimport Button from \"@ui/button\";\nimport { ImageType, TextType } from \"@utils/types\";\n\nconst EducationModal = ({\n    show,\n    setShow,\n    image,\n    title,\n    category,\n    texts,\n    path\n}) => {\n    return (\n        <Modal\n            show={show}\n            onHide={() => setShow(false)}\n            dialogClassName=\"modal-90w\"\n            aria-labelledby=\"example-custom-modal-styling-title\"\n            centered={true}\n        >\n            <Modal.Header>\n                <Modal.Title\n                    id=\"example-custom-modal-styling-title\"\n                    className=\"sr-only\"\n                >\n                    Custom Modal Styling\n                </Modal.Title>\n                <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={() => setShow(false)}\n                >\n                    <span aria-hidden=\"true\">\n                        <X />\n                    </span>\n                </button>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"row align-items-center\">\n                    <div className=\"col-lg-6\">\n                        <div className=\"portfolio-popup-thumbnail\">\n                            {image?.src && (\n                                <div className=\"image\">\n                                    <Image\n                                        src={image.src}\n                                        alt={image?.alt || title}\n                                        className=\"w-100\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-6\">\n                        <div className=\"text-content\">\n                            <h3>\n                                <span>{category}</span> {title}\n                            </h3>\n                            {texts?.map((text, i) => (\n                                <p\n                                    className={\n                                        i !== texts.length - 1 ? \"mb--30\" : \"\"\n                                    }\n                                    key={i}\n                                >\n                                    {text.content}\n                                </p>\n                            ))}\n                            <div className=\"button-group mt--20\">\n                                {/* <Button path={path} className=\"thumbs-icon\"> */}\n                                {/* <span>LIKE THIS</span>\n                                    <ChevronRight /> */}\n                                    {/* <ThumbsUp /> */}\n                                {/* </Button> */}\n                                <Button path={path}>\n                                    <span>VISIT WEBSITE</span>\n                                    <ChevronRight />\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nEducationModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    setShow: PropTypes.func.isRequired,\n    image: PropTypes.shape(ImageType).isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n};\n\nexport default EducationModal;\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ImageType, TextType } from \"@utils/types\";\r\nimport { CardListItem } from \"@ui/card-list\";\r\nimport PortfolioModal from \"@components/modal-portfolio\";\r\nimport EducationModal from \"@components/modal-experience\";\r\n\r\nconst EducationCard = ({ title, category, image, path, texts }) => {\r\n    const [show, setShow] = useState(false);\r\n    return (\r\n        <>\r\n            <CardListItem\r\n                onClick={() => setShow(true)}\r\n                onKeyPress={() => setShow(true)}\r\n            >\r\n                {title}\r\n            </CardListItem>\r\n            <EducationModal\r\n                show={show}\r\n                setShow={setShow}\r\n                title={title}\r\n                category={category}\r\n                image={image}\r\n                texts={texts}\r\n                path={path}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nEducationCard.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    category: PropTypes.string.isRequired,\r\n    image: PropTypes.shape(ImageType).isRequired,\r\n    path: PropTypes.string.isRequired,\r\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\r\n};\r\n\r\nexport default EducationCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CardList } from \"@ui/card-list\";\r\nimport EducationCard from \"@components/education-card/layout-03\";\r\nimport PortfolioCard from \"@components/portfolio-card/layout-03\";\r\nimport { ItemType } from \"@utils/types\";\r\n\r\nconst EducationArea = ({ data }) => {\r\n    return (\r\n        <div\r\n            data-aos=\"fade-left\"\r\n            data-aos-duration=\"500\"\r\n            data-aos-delay=\"200\"\r\n            data-aos-once=\"true\"\r\n            className=\"rn-portfolio-area single-card-sticky section-height\"\r\n        >\r\n            <div className=\"inner\">\r\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\r\n                {data?.items && (\r\n                    <CardList>\r\n                        {data.items?.map((item) => (\r\n                            <EducationCard\r\n                                key={item.id}\r\n                                title={item.title}\r\n                                category={item.category}\r\n                                image={item.images?.[0]}\r\n                                texts={item.texts}\r\n                                path={item.path}\r\n                            />\r\n                        ))}\r\n                    </CardList>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nEducationArea.propTypes = {\r\n    data: PropTypes.shape({\r\n        title: PropTypes.string,\r\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\r\n    }),\r\n};\r\n\r\nexport default EducationArea;\r\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { normalizedData } from \"@utils\";\nimport Layout from \"@layout\";\nimport HeroArea from \"@containers/hero/layout-10\";\nimport AboutArea from \"@containers/about/layout-03\";\nimport SkillArea from \"@containers/skill/layout-02\";\nimport EducationArea from \"@containers/experience/layout-05\";\nimport PortfolioArea from \"@containers/portfolio/layout-05\";\nimport BlogArea from \"@containers/blog/layout-03\";\nimport TestimonialArea from \"@containers/testimonial/layout-02\";\nimport ContactArea from \"@containers/contact/layout-03\";\nimport ServiceArea from \"@containers/service/layout-05\";\n\nconst IndexFreelencerPage = ({ data }) => {\n    const content = normalizedData(data?.homePage?.content || []);\n    return (\n        <Layout pageTitle=\"Fredrik\">\n            <main className=\"main-page-wrapper\">\n                <div className=\"rn-slider-area\">\n                    <div className=\"container\">\n                        <div className=\"row row--30 pt--100 pt_sm--50\">\n                            <div className=\"col-lg-6\">\n                                <HeroArea data={content[\"hero-section\"]}\n                                />\n                            </div>\n                            <div className=\"col-lg-6\">\n                                <div className=\"sticky-home-wrapper\">\n                                    <AboutArea\n                                        data={content[\"about-section\"]}\n                                    />\n                                    <SkillArea\n                                        data={content[\"skill-section\"]}\n                                    />\n                                    <EducationArea\n                                        data={content[\"education-section\"]}\n                                    />\n                                    <PortfolioArea\n                                        data={content[\"portfolio-section\"]}\n                                    />\n                                    <EducationArea\n                                        data={content[\"experience-section\"]}\n                                    />\n                                    <ServiceArea\n                                        data={content[\"service-section\"]}\n                                    />\n                                    <BlogArea\n                                        data={{\n                                            ...content[\"blog-section\"],\n                                            blogs: data?.allArticle?.nodes,\n                                        }}\n                                    />\n                                    <section id=\"contact-me\">\n                                         <ContactArea\n                                    data={{\n                                        ...content[\"contact-section\"],\n                                        socials: data.site.siteMetadata.socials,\n                                        phone: data.site.siteMetadata?.contact?.phone,\n                                        email: data.site.siteMetadata?.contact?.email,\n                                    }}\n                                    />\n                                    </section>\n                                   \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query FreelencerPageQuery {\n        site {\n            siteMetadata {\n                contact {\n                    phone\n                    email\n                }\n                socials {\n                    id\n                    title\n                    icon\n                    path\n                }\n            }\n        }\n        homePage(title: { eq: \"freelencer-home\" }) {\n            content {\n                ...Content01\n            }\n        }\n        allArticle(limit: 3) {\n            nodes {\n                ...Article\n            }\n        }\n    }\n`;\n\nIndexFreelencerPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                socials: PropTypes.arrayOf(PropTypes.shape({})),\n                contact: PropTypes.shape({\n                    phone: PropTypes.string,\n                    email: PropTypes.string,\n                }),\n                getform_url: PropTypes.string,\n            }),\n        }),\n        homePage: PropTypes.shape({\n            content: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        allArticle: PropTypes.shape({\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n    }),\n};\n\nexport default IndexFreelencerPage;\n"],"names":["show","setShow","image","title","category","texts","path","Modal","onHide","dialogClassName","centered","id","className","type","onClick","src","alt","map","text","i","length","key","content","useState","onKeyPress","data","items","C","item","images","normalizedData","homePage","pageTitle","blogs","allArticle","nodes","socials","site","siteMetadata","phone","contact","email"],"sourceRoot":""}