{"version":3,"file":"component---src-pages-index-jsx-9577742282db3bff8bdd.js","mappings":"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","sources":["webpack://inbio-gatsby/./src/components/modal-experience/index.jsx","webpack://inbio-gatsby/./src/components/education-card/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/experience/layout-05/index.jsx","webpack://inbio-gatsby/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { X, ThumbsUp, ChevronRight } from \"react-feather\";\r\nimport Image from \"@ui/image\";\r\nimport Button from \"@ui/button\";\r\nimport { ImageType, TextType } from \"@utils/types\";\r\n\r\nconst EducationModal = ({\r\n    show,\r\n    setShow,\r\n    image,\r\n    title,\r\n    category,\r\n    texts,\r\n    path\r\n}) => {\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={() => setShow(false)}\r\n            dialogClassName=\"modal-90w\"\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n            centered={true}\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title\r\n                    id=\"example-custom-modal-styling-title\"\r\n                    className=\"sr-only\"\r\n                >\r\n                    Custom Modal Styling\r\n                </Modal.Title>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                    onClick={() => setShow(false)}\r\n                >\r\n                    <span aria-hidden=\"true\">\r\n                        <X />\r\n                    </span>\r\n                </button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"portfolio-popup-thumbnail\">\r\n                            {image?.src && (\r\n                                <div className=\"image\">\r\n                                    <Image\r\n                                        src={image.src}\r\n                                        alt={image?.alt || title}\r\n                                        className=\"w-100\"\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"text-content\">\r\n                            <h3>\r\n                                <span>{category}</span> {title}\r\n                            </h3>\r\n                            {texts?.map((text, i) => (\r\n                                <p\r\n                                    className={\r\n                                        i !== texts.length - 1 ? \"mb--30\" : \"\"\r\n                                    }\r\n                                    key={i}\r\n                                >\r\n                                    {text.content}\r\n                                </p>\r\n                            ))}\r\n                            <div className=\"button-group mt--20\">\r\n                                {/* <Button path={path} className=\"thumbs-icon\"> */}\r\n                                {/* <span>LIKE THIS</span>\r\n                                    <ChevronRight /> */}\r\n                                    {/* <ThumbsUp /> */}\r\n                                {/* </Button> */}\r\n                                <Button path={path}>\r\n                                    <span>VISIT WEBSITE</span>\r\n                                    <ChevronRight />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nEducationModal.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    setShow: PropTypes.func.isRequired,\r\n    image: PropTypes.shape(ImageType).isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    category: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\r\n};\r\n\r\nexport default EducationModal;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ImageType, TextType } from \"@utils/types\";\r\nimport { CardListItem } from \"@ui/card-list\";\r\nimport PortfolioModal from \"@components/modal-portfolio\";\r\nimport EducationModal from \"@components/modal-experience\";\r\n\r\nconst EducationCard = ({ title, category, image, path, texts }) => {\r\n    const [show, setShow] = useState(false);\r\n    return (\r\n        <>\r\n            <CardListItem\r\n                onClick={() => setShow(true)}\r\n                onKeyPress={() => setShow(true)}\r\n            >\r\n                {title}\r\n            </CardListItem>\r\n            <EducationModal\r\n                show={show}\r\n                setShow={setShow}\r\n                title={title}\r\n                category={category}\r\n                image={image}\r\n                texts={texts}\r\n                path={path}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nEducationCard.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    category: PropTypes.string.isRequired,\r\n    image: PropTypes.shape(ImageType).isRequired,\r\n    path: PropTypes.string.isRequired,\r\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\r\n};\r\n\r\nexport default EducationCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CardList } from \"@ui/card-list\";\r\nimport EducationCard from \"@components/education-card/layout-03\";\r\nimport PortfolioCard from \"@components/portfolio-card/layout-03\";\r\nimport { ItemType } from \"@utils/types\";\r\n\r\nconst EducationArea = ({ data }) => {\r\n    return (\r\n        <div\r\n            data-aos=\"fade-left\"\r\n            data-aos-duration=\"500\"\r\n            data-aos-delay=\"200\"\r\n            data-aos-once=\"true\"\r\n            className=\"rn-portfolio-area single-card-sticky section-height\"\r\n        >\r\n            <div className=\"inner\">\r\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\r\n                {data?.items && (\r\n                    <CardList>\r\n                        {data.items?.map((item) => (\r\n                            <EducationCard\r\n                                key={item.id}\r\n                                title={item.title}\r\n                                category={item.category}\r\n                                image={item.images?.[0]}\r\n                                texts={item.texts}\r\n                                path={item.path}\r\n                            />\r\n                        ))}\r\n                    </CardList>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nEducationArea.propTypes = {\r\n    data: PropTypes.shape({\r\n        title: PropTypes.string,\r\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\r\n    }),\r\n};\r\n\r\nexport default EducationArea;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport { normalizedData } from \"@utils\";\r\nimport Layout from \"@layout\";\r\nimport HeroArea from \"@containers/hero/layout-10\";\r\nimport AboutArea from \"@containers/about/layout-03\";\r\nimport SkillArea from \"@containers/skill/layout-02\";\r\nimport EducationArea from \"@containers/experience/layout-05\";\r\nimport PortfolioArea from \"@containers/portfolio/layout-05\";\r\nimport BlogArea from \"@containers/blog/layout-03\";\r\nimport TestimonialArea from \"@containers/testimonial/layout-02\";\r\nimport ContactArea from \"@containers/contact/layout-03\";\r\nimport ServiceArea from \"@containers/service/layout-05\";\r\n\r\nconst IndexFreelencerPage = ({ data }) => {\r\n    const content = normalizedData(data?.homePage?.content || []);\r\n    return (\r\n        <Layout pageTitle=\"Fredrik\">\r\n            <main className=\"main-page-wrapper\">\r\n                <div className=\"rn-slider-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row row--30 pt--100 pt_sm--50\">\r\n                            <div className=\"col-lg-6\">\r\n                                <HeroArea data={content[\"hero-section\"]}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                                <div className=\"sticky-home-wrapper\">\r\n                                    <AboutArea\r\n                                        data={content[\"about-section\"]}\r\n                                    />\r\n                                    <SkillArea\r\n                                        data={content[\"skill-section\"]}\r\n                                    />\r\n                                    <EducationArea\r\n                                        data={content[\"education-section\"]}\r\n                                    />\r\n                                    <PortfolioArea\r\n                                        data={content[\"portfolio-section\"]}\r\n                                    />\r\n                                    <EducationArea\r\n                                        data={content[\"experience-section\"]}\r\n                                    />\r\n                                    <ServiceArea\r\n                                        data={content[\"service-section\"]}\r\n                                    />\r\n                                    <BlogArea\r\n                                        data={{\r\n                                            ...content[\"blog-section\"],\r\n                                            blogs: data?.allArticle?.nodes,\r\n                                        }}\r\n                                    />\r\n                                    <section id=\"contact-me\">\r\n                                         <ContactArea\r\n                                    data={{\r\n                                        ...content[\"contact-section\"],\r\n                                        socials: data.site.siteMetadata.socials,\r\n                                        phone: data.site.siteMetadata?.contact?.phone,\r\n                                        email: data.site.siteMetadata?.contact?.email,\r\n                                    }}\r\n                                    />\r\n                                    </section>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport const query = graphql`\r\n    query FreelencerPageQuery {\r\n        site {\r\n            siteMetadata {\r\n                contact {\r\n                    phone\r\n                    email\r\n                }\r\n                socials {\r\n                    id\r\n                    title\r\n                    icon\r\n                    path\r\n                }\r\n            }\r\n        }\r\n        homePage(title: { eq: \"freelencer-home\" }) {\r\n            content {\r\n                ...Content01\r\n            }\r\n        }\r\n        allArticle(limit: 3) {\r\n            nodes {\r\n                ...Article\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nIndexFreelencerPage.propTypes = {\r\n    data: PropTypes.shape({\r\n        site: PropTypes.shape({\r\n            siteMetadata: PropTypes.shape({\r\n                socials: PropTypes.arrayOf(PropTypes.shape({})),\r\n                contact: PropTypes.shape({\r\n                    phone: PropTypes.string,\r\n                    email: PropTypes.string,\r\n                }),\r\n                getform_url: PropTypes.string,\r\n            }),\r\n        }),\r\n        homePage: PropTypes.shape({\r\n            content: PropTypes.arrayOf(PropTypes.shape({})),\r\n        }),\r\n        allArticle: PropTypes.shape({\r\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\r\n        }),\r\n    }),\r\n};\r\n\r\nexport default IndexFreelencerPage;\r\n"],"names":["show","setShow","image","title","category","texts","path","Modal","onHide","dialogClassName","centered","id","className","type","onClick","src","alt","map","text","i","length","key","content","useState","onKeyPress","data","items","C","item","images","normalizedData","homePage","pageTitle","blogs","allArticle","nodes","socials","site","siteMetadata","phone","contact","email"],"sourceRoot":""}